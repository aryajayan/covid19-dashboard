{"version":3,"sources":["./src/app/dashboard/total-dashboard/total-dashboard.component.ts","./src/app/dashboard/total-dashboard/total-dashboard.component.html","./src/app/app.selector.ts","./src/app/dashboard/country-dashboard/edit-country/edit-country.component.ts","./src/app/dashboard/country-dashboard/edit-country/edit-country.component.html","./src/app/dashboard/country-dashboard/country-list/country-list.component.ts","./src/app/dashboard/country-dashboard/country-list/country-list.component.html","./src/app/dashboard/country-dashboard/country-dashboard.component.ts","./src/app/dashboard/country-dashboard/country-dashboard.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard.module.ts","./src/app/dashboard/store/dashboard.selector.ts","./src/app/shared/auth-guard.service.ts"],"names":[],"mappings":";;;;;;;;;;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8D;AAEA;;;;;ICA1D,yEAC6B;IAC3B,kEAAkD;IAClD,0EAAsB;IAAA,qEAAU;IAAA,4DAAO;IACzC,4DAAM;;;IACN,0EAC8B;IAC5B,0EAA0B;IACxB,0EAA6B;IAC3B,qEAAI;IAAA,sEAAW;IAAA,4DAAK;IACpB,0EAAmB;IACjB,uDACF;;IAAA,4DAAM;IACR,4DAAM;IACR,4DAAM;IACN,0EAA0B;IACxB,0EAA6B;IAC3B,sEAAI;IAAA,wEAAY;IAAA,4DAAK;IACrB,2EAAmB;IACjB,wDACF;;IAAA,4DAAM;IACR,4DAAM;IACR,4DAAM;IACN,2EAA2B;IACzB,2EAA6B;IAC3B,sEAAI;IAAA,2EAAe;IAAA,4DAAK;IACxB,2EAAmB;IACjB,wDACF;;IAAA,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,4DAAM;;;IApBE,0DACF;IADE,mKACF;IAOE,0DACF;IADE,qKACF;IAOE,0DACF;IADE,wKACF;;;IAWN,yEAC6B;IAC3B,kEAAkD;IAClD,0EAAsB;IAAA,qEAAU;IAAA,4DAAO;IACzC,4DAAM;;;IACN,0EAC8B;IAC5B,0EAA0B;IACxB,0EAA6B;IAC3B,qEAAI;IAAA,gEAAK;IAAA,4DAAK;IACd,0EAAmB;IACjB,uDACF;;IAAA,4DAAM;IACR,4DAAM;IACR,4DAAM;IACN,0EAA0B;IACxB,0EAA6B;IAC3B,sEAAI;IAAA,kEAAM;IAAA,4DAAK;IACf,2EAAmB;IACjB,wDACF;;IAAA,4DAAM;IACR,4DAAM;IACR,4DAAM;IACN,2EAA0B;IACxB,2EAA6B;IAC3B,sEAAI;IAAA,qEAAS;IAAA,4DAAK;IAClB,2EAAmB;IACjB,wDACF;;IAAA,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,4DAAM;;;IApBE,0DACF;IADE,wKACF;IAOE,0DACF;IADE,0KACF;IAOE,0DACF;IADE,6KACF;;AD5DH,MAAM,uBAAuB;IAGlC,YAAoB,KAA8B;QAA9B,UAAK,GAAL,KAAK,CAAyB;QAFlD,cAAS,GAAkB,IAAI,CAAC;IAEqB,CAAC;IAEtD,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,yEAAe,CAAC,CAAC,SAAS,CAC9D,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;gBAC1B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,qEAA8B,EAAE,CAAC,CAAC;aACvD;QACH,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,KAAK,CAAC,uDAAuD,CAAC,CAAC;QACjE,CAAC,CACF,CAAC;IACJ,CAAC;IACD,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;;8FApBU,uBAAuB;uGAAvB,uBAAuB;QCbpC,yEAAyD;QACvD,6EAA+B;QAC7B,4EAA+B;QAC7B,wEAAuB;QAAA,gEAAK;QAAA,4DAAK;QACjC,oEAA+B;QACjC,4DAAS;QACT,mHAIM;QACN,oHA0BM;QACR,4DAAU;QAEV,6EAA+B;QAC7B,4EAA+B;QAC7B,yEAAuB;QAAA,iEAAK;QAAA,4DAAK;QACjC,qEAA+B;QACjC,4DAAS;QACT,qHAIM;QACN,sHA0BM;QACR,4DAAU;QACZ,4DAAM;;QAvEI,0DAAqB;QAArB,uFAAqB;QAKrB,0DAAsB;QAAtB,wFAAsB;QAkCtB,0DAAqB;QAArB,uFAAqB;QAKrB,0DAAsB;QAAtB,wFAAsB;;;;;;;;;;;;;;AChDhC;AAAA;AAAO,MAAM,cAAc,GAAG,CAAC,KAAuB,EAAE,EAAE,CAAC,KAAK,CAAC;;;;;;;;;;;;;ACFjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AAGd;AAGW;AACE;;;;;;;ICOzD,2EAC6D;IAC3D,wFACF;IAAA,4DAAO;;;IAQP,2EAC8D;IAC5D,yFACF;IAAA,4DAAO;;;IASP,2EACiE;IAC/D,4FACF;IAAA,4DAAO;;;IAQP,2EAC6D;IAC3D,wFACF;IAAA,4DAAO;;ADrCV,MAAM,oBAAoB;IAI/B,YACU,KAA8B,EAC9B,KAAqB,EACrB,MAAc;QAFd,UAAK,GAAL,KAAK,CAAyB;QAC9B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QAJxB,eAAU,GAAY,KAAK,CAAC;IAKzB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,MAAM;aACd,IAAI,CACH,2DAAI,CAAC,CAAC,CAAC,EACP,0DAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAC7B,gEAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACjB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,mFAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9D,CAAC,CAAC,CACH;aACA,SAAS,CAAC,CAAC,OAAgB,EAAE,EAAE;YAC9B,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;YAC9B,IAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,EAAE;YAC3C,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,eAAe;QACb,IAAI,CAAC,WAAW,GAAG,IAAI,wDAAS,CAAC;YAC/B,KAAK,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACxE,MAAM,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;gBAClD,yDAAU,CAAC,QAAQ;aACpB,CAAC;YACF,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE;gBACxD,yDAAU,CAAC,QAAQ;aACpB,CAAC;YACF,KAAK,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACzE,CAAC,CAAC;IACL,CAAC;IAED,aAAa;QACX,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;IAC5E,CAAC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,YAAY,EAAE,EAAE;YACvB,IAAI,OAAO,mCACN,IAAI,CAAC,cAAc,KACtB,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,EAC1C,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,EAC5C,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,EAClD,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,GAC3C,CAAC;YACF,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,0EAAmC,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;YACtE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;SAC3E;IACH,CAAC;IAED,YAAY;QACV,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;YAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,OAAO,KAAK,CAAC;SACd;QACD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,OAAO,IAAI,CAAC;IACd,CAAC;IAED,cAAc,CAAC,KAAK;QAClB,IAAI,SAAS,GAAG,KAAK,CAAC,GAAG,CAAC;QAC1B,MAAM,OAAO,GAAG,OAAO,CAAC;QACxB,IAAI,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;YAC3B,KAAK,CAAC,cAAc,EAAE,CAAC;SACxB;IACH,CAAC;;wFAzEU,oBAAoB;oGAApB,oBAAoB;QCfjC,yEAA2D;QACzD,4EAA+B;QAC7B,wEAAuB;QAAA,gEAAK;QAAA,4DAAK;QACjC,oEAA+B;QACjC,4DAAS;QACT,6EAA8B;QAC5B,0EAAgC;QAC9B,yEAAuB;QAErB,yEAAyB;QACvB,2EAI2B;QADpB,qJAAW,0BAAsB,IAAC;QAHzC,4DAI2B;QAC3B,oHAGO;QACT,4DAAM;QACN,0EAAyB;QACvB,6EAI4B;QADrB,sJAAW,0BAAsB,IAAC;QAHzC,4DAI4B;QAC5B,oHAGO;QACT,4DAAM;QAEN,0EAAyB;QACvB,6EAI+B;QADxB,sJAAW,0BAAsB,IAAC;QAHzC,4DAI+B;QAC/B,oHAGO;QACT,4DAAM;QACN,0EAAyB;QACvB,6EAI2B;QADpB,sJAAW,0BAAsB,IAAC;QAHzC,4DAI2B;QAC3B,oHAGO;QACT,4DAAM;QAER,4DAAM;QACN,2EAAqB;QACnB,8EACkC;QAA1B,6IAAS,mBAAe,IAAC;QAAC,kEAAM;QAAA,4DAAS;QACjD,8EACgC;QAAxB,6IAAS,iBAAa,IAAC;QAAC,gEAAI;QAAA,4DAAS;QAC/C,4DAAM;QACR,4DAAO;QACT,4DAAU;QACZ,4DAAM;;QA1DI,0DAAyB;QAAzB,sFAAyB;QAUlB,0DAAoD;QAApD,wHAAoD;QAWpD,0DAAqD;QAArD,yHAAqD;QAYrD,0DAAwD;QAAxD,4HAAwD;QAWxD,0DAAoD;QAApD,wHAAoD;;;;;;;;;;;;;;AC1CrE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyE;AAIR;AAGE;;;;;;;;;ICEzD,6EACwB;IAAA,uDAAO;IAAA,4DAAS;;;IAAhC,2EAAe;IAAC,0DAAO;IAAP,uEAAO;;;IAqBrC,0EAC+B;IAC7B,mEAAkD;IAClD,2EAAsB;IAAA,qEAAU;IAAA,4DAAO;IACzC,4DAAM;;;;IAGJ,0EAC2I;IACzI,0EAA6B;IAC3B,0EAAuB;IACrB,6EAAuC;IACrC,qEAC4B;IAC9B,4DAAS;IACT,qEAAI;IAAA,uDAAgB;IAAA,4DAAK;IAC3B,4DAAM;IACN,0EAAyC;IACvC,0EAAgC;IAC9B,qEAAI;IAAA,iEAAK;IAAA,4DAAK;IACd,wEAAM;IAAA,wDAAuB;;IAAA,4DAAO;IACtC,4DAAM;IACN,2EAAgC;IAC9B,sEAAI;IAAA,kEAAM;IAAA,4DAAK;IACf,wEAAM;IAAA,wDAAwB;;IAAA,4DAAO;IACvC,4DAAM;IACN,2EAAgC;IAC9B,sEAAI;IAAA,qEAAS;IAAA,4DAAK;IAClB,wEAAM;IAAA,wDAA2B;;IAAA,4DAAO;IAC1C,4DAAM;IACR,4DAAM;IACN,2EAAyC;IACvC,2EAAgC;IAC9B,sEAAI;IAAA,iEAAK;IAAA,4DAAK;IACd,wEAAM;IAAA,wDAAuB;;IAAA,4DAAO;IACtC,4DAAM;IACN,2EAAgC;IAC9B,sEAAI;IAAA,sEAAU;IAAA,4DAAK;IACnB,wEAAM;IAAA,wDAA4B;;IAAA,4DAAO;IAC3C,4DAAM;IACN,yEACqB;IADlB,yWAAgC;IAEjC,oEAA0B;IAC5B,4DAAI;IACN,4DAAM;IACR,4DAAM;IACR,4DAAM;;;IAjCO,0DAAsB;IAAtB,+IAAsB;IAEzB,0DAAgB;IAAhB,gFAAgB;IAKZ,0DAAuB;IAAvB,gJAAuB;IAIvB,0DAAwB;IAAxB,iJAAwB;IAIxB,0DAA2B;IAA3B,qJAA2B;IAM3B,0DAAuB;IAAvB,iJAAuB;IAIvB,0DAA4B;IAA5B,sJAA4B;;;IAjC5C,0EACgC;IAC9B,0HAuCM;;;IAER,4DAAM;;;IAxCkB,0DAAwG;IAAxG,+TAAwG;;;ADzB7H,MAAM,oBAAoB;IAqB/B,YACU,KAA8B,EAC9B,eAAkC,EAClC,MAAc,EACd,KAAqB;QAHrB,UAAK,GAAL,KAAK,CAAyB;QAC9B,oBAAe,GAAf,eAAe,CAAmB;QAClC,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QAxB/B,gBAAW,GAAc,IAAI,CAAC;QAC9B,mBAAc,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;QAE9B,eAAU,GAAW,CAAC,CAAC;QACvB,aAAQ,GAAW,EAAE,CAAC;QACtB,oBAAe,GAAW,EAAE,CAAC;QAC7B,sBAAiB,GAAW,CAAC,CAAC;QAI9B,aAAQ,GAAY,KAAK,CAAC;QAC1B,eAAU,GAAG;YACX,SAAS;YACT,OAAO;YACP,QAAQ;YACR,WAAW;YACX,OAAO;YACP,YAAY;SACb,CAAC;IAOC,CAAC;IAIJ,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,wDAAS,CAAC;YAC9B,MAAM,EAAE,IAAI,0DAAW,CAAC,SAAS,CAAC;YAClC,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAChC,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,2EAAiB,CAAC,CAAC,SAAS,CACjE,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,EAAE;gBAC5B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,4EAAqC,EAAE,CAAC,CAAC;aAC9D;iBAAM;gBACL,IAAI,CAAC,cAAc,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;aACrD;QACH,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,KAAK,CAAC,uDAAuD,CAAC,CAAC;QACjE,CAAC,CACF,CAAC;QACF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU;aACjC,GAAG,CAAC,YAAY,CAAC;aACjB,YAAY,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YAChC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACpB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;YACnB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC5B,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU;aACjC,GAAG,CAAC,QAAQ,CAAC;aACb,YAAY,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAC/B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE;YAC7C,IAAI,CAAC,UAAU,IAAI,EAAE,CAAC;YACtB,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC;YACpB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC;YACrC,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE;gBAC7C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;aAClD;YACD,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,SAAS,GAAG,CAAC,CAAC;SAChD;IACH,CAAC;IAED,eAAe;QACb,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;YACvB,IAAI,CAAC,UAAU,IAAI,EAAE,CAAC;YACtB,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC;YACpB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC;YACrC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,SAAS,GAAG,CAAC,CAAC;SAChD;IACH,CAAC;IACD,eAAe,CAAC,IAAY;QAC1B,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CACrD,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACnD,CAAC;IACJ,CAAC;IAED,qBAAqB;QACnB,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,CAAC;IACvC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;IACnC,CAAC;IACD,aAAa,CAAC,SAAS;QACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,EAAE,SAAS,CAAC,EAAE;YAChD,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;SAC9B,CAAC,CAAC;IACL,CAAC;;wFAxGU,oBAAoB;oGAApB,oBAAoB;;;;;;QCtBjC,yEAA2D;QACzD,4EACiC;QAC/B,wEAAuB;QAAA,kEAAO;QAAA,4DAAK;QACnC,yEAA8B;QAC5B,yEAA4B;QAC1B,kEAC0B;QAC1B,sEAGoC;QACtC,4DAAM;QACN,yEAA4B;QAC1B,4EAEsC;QACpC,wHACwC;QAC1C,4DAAS;QACX,4DAAM;QACR,4DAAM;QACN,0EAAgC;QAC9B,4EAA8B;QAAA,wDACsB;QAAA,4DAAO;QAC3D,2EAAgC;QAC9B,4EAAkC;QAA5B,2IAAS,qBAAiB,IAAC;QAC/B,oEACyC;QAC3C,4DAAO;QACP,4EAA8B;QAAxB,2IAAS,iBAAa,IAAC;QAC3B,oEACwG;QAC1G,4DAAO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAS;QACT,mFACwB;QACtB,mHAIM;QACN,mHA2CM;QACR,4DAAU;QACZ,4DAAM;;QAvFI,0DAAwB;QAAxB,qFAAwB;QAeA,0DAAa;QAAb,mFAAa;QAMX,0DACsB;QADtB,kNACsB;QAG7C,0DAA6C;QAA7C,+JAA6C;QAK7C,0DAAgG;QAAhG,6NAAgG;QAQnG,0DAAuB;QAAvB,yFAAuB;QAKvB,0DAAwB;QAAxB,0FAAwB;;;;;;;;;;;;;;;;;;;;ACtC3B,MAAM,yBAAyB;IAGpC;QAFA,aAAQ,GAAY,KAAK,CAAC;IAEX,CAAC;IAEhB,QAAQ,KAAU,CAAC;;kGALR,yBAAyB;yGAAzB,yBAAyB;QCPtC,2EAA+B;;;;;;;;;;;;;;ACG/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;;;;AAQnD,MAAM,kBAAkB;IAC7B,YAAoB,KAA8B;QAA9B,UAAK,GAAL,KAAK,CAAyB;IAAG,CAAC;IAEtD,QAAQ,KAAU,CAAC;IAEnB,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,+DAAkB,EAAE,CAAC,CAAC;IAC5C,CAAC;;oFAPU,kBAAkB;kGAAlB,kBAAkB;QCX/B,yEAAiC;QAC/B,yEAA0B;QACxB,uEAE6B;QAC3B,kEAC0B;QAC5B,4DAAI;QACJ,uEAE6B;QAC3B,kEAC0B;QAC5B,4DAAI;QACJ,uEACwB;QAArB,qIAAS,cAAU,IAAC;QACrB,kEAC0B;QAC5B,4DAAI;QACN,4DAAM;QACN,6EAA+B;QAC7B,2EAA+B;QACjC,4DAAU;QACZ,4DAAM;;;;;;;;;;;;;;ACtBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACY;AACZ;AACuC;AACM;AAC1B;AACX;AACS;AAC+B;AACA;;;AAwCxF,MAAM,eAAe;;8EAAf,eAAe;+FAAf,eAAe;mGA9BjB;YACP,4DAAY;YACZ,0DAAW;YACX,kEAAmB;YACnB,kEAAY;YACZ,4DAAY,CAAC,QAAQ,CAAC;gBACpB;oBACE,IAAI,EAAE,EAAE;oBACR,SAAS,EAAE,uEAAkB;oBAC7B,WAAW,EAAE,CAAC,2EAAgB,CAAC;oBAC/B,QAAQ,EAAE;wBACR,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,iBAAiB,EAAE,SAAS,EAAE,MAAM,EAAE;wBAC9D,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,kGAAuB,EAAE;wBAC/D;4BACE,IAAI,EAAE,mBAAmB;4BACzB,SAAS,EAAE,wGAAyB;4BACpC,QAAQ,EAAE;gCACR,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,cAAc,EAAE;gCACxC,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,2GAAoB,EAAE;gCACzD;oCACE,IAAI,EAAE,kBAAkB;oCACxB,SAAS,EAAE,2GAAoB;iCAChC;6BACF;yBACF;qBACF;iBACF;aACF,CAAC;SACH;oIAEU,eAAe,mBApCxB,uEAAkB;QAClB,kGAAuB;QACvB,wGAAyB;QACzB,2GAAoB;QACpB,2GAAoB,aAGpB,4DAAY;QACZ,0DAAW;QACX,kEAAmB;QACnB,kEAAY;;;;;;;;;;;;;ACxBhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACK;AAI3C,MAAM,eAAe,GAAG,kEAAc,CAC3C,4DAA0B,EAC1B,CAAC,KAAuB,EAAE,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,SAAS,CACvD,CAAC;AACK,MAAM,iBAAiB,GAAG,kEAAc,CAC7C,4DAA0B,EAC1B,CAAC,KAAuB,EAAE,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,WAAW,CACzD,CAAC;AACK,MAAM,iBAAiB,GAAG,CAAC,EAAU,EAAE,EAAE,CAC9C,kEAAc,CAAC,iBAAiB,EAAE,CAAC,KAAgB,EAAE,EAAE;IACrD,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;IAC7C,OAAO,CAAC,CAAC;AACX,CAAC,CAAC,CAAC;;;;;;;;;;;;;ACPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;AAMpC,MAAM,gBAAgB;IAC3B,YAAoB,KAA8B,EAAU,MAAc;QAAtD,UAAK,GAAL,KAAK,CAAyB;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAE9E,WAAW,CACT,KAA6B,EAC7B,KAA0B;QAM1B,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CACnC,2DAAI,CAAC,CAAC,CAAC,EACP,0DAAG,CAAC,CAAC,QAAQ,EAAE,EAAE;YACf,IAAI,QAAQ,CAAC,IAAI,EAAE;gBACjB,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAChC,OAAO,KAAK,CAAC;aACd;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;;gFAtBU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM","file":"dashboard-dashboard-module.js","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport * as fromApp from '../../app.reducer';\r\nimport { TotalCaseData } from '../total-cases.model';\r\nimport * as DashboardActions from '../store/dashboard.action';\r\nimport { Subscription } from 'rxjs';\r\nimport { selectTotalList } from '../store/dashboard.selector';\r\n\r\n@Component({\r\n  selector: 'app-total-dashboard',\r\n  templateUrl: './total-dashboard.component.html',\r\n  styleUrls: ['./total-dashboard.component.scss'],\r\n})\r\nexport class TotalDashboardComponent implements OnInit, OnDestroy {\r\n  totalData: TotalCaseData = null;\r\n  subscription: Subscription;\r\n  constructor(private store: Store<fromApp.AppState>) {}\r\n\r\n  ngOnInit(): void {\r\n    this.subscription = this.store.select(selectTotalList).subscribe(\r\n      (data) => {\r\n        this.totalData = data;\r\n        if (this.totalData == null) {\r\n          this.store.dispatch(DashboardActions.LoadDashboard());\r\n        }\r\n      },\r\n      (error) => {\r\n        alert('Unable to fetch data. Please try again after sometime');\r\n      }\r\n    );\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"total_dashboard_container dashboard_content\">\r\n  <section class=\"count_section\">\r\n    <header class=\"header_section\">\r\n      <h3 class=\"sub_header\">Total</h3>\r\n      <div class=\"border_line\"></div>\r\n    </header>\r\n    <div class=\"spinner align-center\"\r\n         *ngIf=\"totalData==null\">\r\n      <i class=\"fa fa-spinner fa-pulse fa-3x fa-fw\"></i>\r\n      <span class=\"sr-only\">Loading...</span>\r\n    </div>\r\n    <div class=\"tile_container\"\r\n         *ngIf=\"totalData!==null\">\r\n      <div class=\"card_content\">\r\n        <div class=\"tile count_tile\">\r\n          <h4>Total Cases</h4>\r\n          <div class=\"count\">\r\n            {{totalData.cases | number}}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"card_content\">\r\n        <div class=\"tile count_tile\">\r\n          <h4>Total Deaths</h4>\r\n          <div class=\"count\">\r\n            {{totalData.deaths | number}}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"card_content \">\r\n        <div class=\"tile count_tile\">\r\n          <h4>Total Recovered</h4>\r\n          <div class=\"count\">\r\n            {{totalData.recovered | number}}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n\r\n  <section class=\"count_section\">\r\n    <header class=\"header_section\">\r\n      <h3 class=\"sub_header\">Today</h3>\r\n      <div class=\"border_line\"></div>\r\n    </header>\r\n    <div class=\"spinner align-center\"\r\n         *ngIf=\"totalData==null\">\r\n      <i class=\"fa fa-spinner fa-pulse fa-3x fa-fw\"></i>\r\n      <span class=\"sr-only\">Loading...</span>\r\n    </div>\r\n    <div class=\"tile_container\"\r\n         *ngIf=\"totalData!==null\">\r\n      <div class=\"card_content\">\r\n        <div class=\"tile count_tile\">\r\n          <h4>Cases</h4>\r\n          <div class=\"count\">\r\n            {{totalData.todayCases | number}}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"card_content\">\r\n        <div class=\"tile count_tile\">\r\n          <h4>Deaths</h4>\r\n          <div class=\"count\">\r\n            {{totalData.todayDeaths | number}}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"card_content\">\r\n        <div class=\"tile count_tile\">\r\n          <h4>Recovered</h4>\r\n          <div class=\"count\">\r\n            {{totalData.todayRecovered | number}}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</div>\r\n","import { createSelector } from '@ngrx/store';\r\nimport * as fromApp from './app.reducer';\r\n\r\nexport const selectAppState = (state: fromApp.AppState) => state;\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { concatMap, map, take } from 'rxjs/operators';\r\nimport * as fromApp from '../../../app.reducer';\r\nimport { Country } from '../../country.model';\r\nimport * as DashboardActions from '../../store/dashboard.action';\r\nimport { selectCountryById } from '../../store/dashboard.selector';\r\n\r\n@Component({\r\n  selector: 'app-edit-country',\r\n  templateUrl: './edit-country.component.html',\r\n  styleUrls: ['./edit-country.component.scss'],\r\n})\r\nexport class EditCountryComponent implements OnInit {\r\n  countryDetails: Country;\r\n  countryForm: FormGroup;\r\n  showErrors: boolean = false;\r\n  constructor(\r\n    private store: Store<fromApp.AppState>,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.params\r\n      .pipe(\r\n        take(1),\r\n        map((params) => params['id']),\r\n        concatMap((data) => {\r\n          return this.store.select(selectCountryById(parseInt(data)));\r\n        })\r\n      )\r\n      .subscribe((country: Country) => {\r\n        this.countryDetails = country;\r\n        this.createFormGroup();\r\n      });\r\n    this.countryForm.valueChanges.subscribe(() => {\r\n      this.showErrors = false;\r\n    });\r\n  }\r\n  createFormGroup() {\r\n    this.countryForm = new FormGroup({\r\n      cases: new FormControl(this.countryDetails.cases, [Validators.required]),\r\n      deaths: new FormControl(this.countryDetails.deaths, [\r\n        Validators.required,\r\n      ]),\r\n      recovered: new FormControl(this.countryDetails.recovered, [\r\n        Validators.required,\r\n      ]),\r\n      tests: new FormControl(this.countryDetails.tests, [Validators.required]),\r\n    });\r\n  }\r\n\r\n  onCancelClick() {\r\n    this.router.navigate(['country-list'], { relativeTo: this.route.parent });\r\n  }\r\n\r\n  onSaveClick() {\r\n    if (this.validateForm()) {\r\n      let country: Country = {\r\n        ...this.countryDetails,\r\n        cases: this.countryForm.get('cases').value,\r\n        deaths: this.countryForm.get('deaths').value,\r\n        recovered: this.countryForm.get('recovered').value,\r\n        tests: this.countryForm.get('tests').value,\r\n      };\r\n      this.store.dispatch(DashboardActions.SaveEdittedDetails({ country }));\r\n      this.router.navigate(['country-list'], { relativeTo: this.route.parent });\r\n    }\r\n  }\r\n\r\n  validateForm() {\r\n    if (this.countryForm.invalid) {\r\n      this.showErrors = true;\r\n      return false;\r\n    }\r\n    this.showErrors = false;\r\n    return true;\r\n  }\r\n\r\n  validateNumber(event) {\r\n    let inputChar = event.key;\r\n    const pattern = /[\\.-]/;\r\n    if (pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n}\r\n","<div class=\"country_dashboard_container dashboard_content\">\r\n  <header class=\"header_section\">\r\n    <h3 class=\"sub_header\">Edit </h3>\r\n    <div class=\"border_line\"></div>\r\n  </header>\r\n  <section class=\"form_section\">\r\n    <form [formGroup]=\"countryForm\">\r\n      <div class=\"form_data\">\r\n\r\n        <div class=\"input_group\">\r\n          <input type=\"number\"\r\n                 class=\"input_text\"\r\n                 formControlName=\"cases\"\r\n                 (keydown)=\"validateNumber($event)\"\r\n                 placeholder=\"Cases\">\r\n          <span class=\"error_text\"\r\n                *ngIf=\"showErrors && countryForm.get('cases').invalid\">\r\n            Enter valid number of cases\r\n          </span>\r\n        </div>\r\n        <div class=\"input_group\">\r\n          <input type=\"number\"\r\n                 class=\"input_text\"\r\n                 formControlName=\"deaths\"\r\n                 (keydown)=\"validateNumber($event)\"\r\n                 placeholder=\"Deaths\">\r\n          <span class=\"error_text\"\r\n                *ngIf=\"showErrors && countryForm.get('deaths').invalid\">\r\n            Enter valid number of deaths\r\n          </span>\r\n        </div>\r\n\r\n        <div class=\"input_group\">\r\n          <input type=\"number\"\r\n                 class=\"input_text\"\r\n                 formControlName=\"recovered\"\r\n                 (keydown)=\"validateNumber($event)\"\r\n                 placeholder=\"Recovered\">\r\n          <span class=\"error_text\"\r\n                *ngIf=\"showErrors && countryForm.get('recovered').invalid\">\r\n            Enter valid number of recovered\r\n          </span>\r\n        </div>\r\n        <div class=\"input_group\">\r\n          <input type=\"number\"\r\n                 class=\"input_text\"\r\n                 formControlName=\"tests\"\r\n                 (keydown)=\"validateNumber($event)\"\r\n                 placeholder=\"Tests\">\r\n          <span class=\"error_text\"\r\n                *ngIf=\"showErrors && countryForm.get('tests').invalid\">\r\n            Enter valid number of tests\r\n          </span>\r\n        </div>\r\n\r\n      </div>\r\n      <div class=\"buttons\">\r\n        <button class=\"button_white\"\r\n                (click)=\"onCancelClick()\">Cancel</button>\r\n        <button class=\"button_blue\"\r\n                (click)=\"onSaveClick()\">Save</button>\r\n      </div>\r\n    </form>\r\n  </section>\r\n</div>\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { FormControl, FormControlName, FormGroup } from '@angular/forms';\r\nimport { Store } from '@ngrx/store';\r\nimport { Country } from '../../country.model';\r\nimport * as fromApp from '../../../app.reducer';\r\nimport * as DashboardActions from '../../store/dashboard.action';\r\nimport { Subscription } from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { selectCountryList } from '../../store/dashboard.selector';\r\n\r\n@Component({\r\n  selector: 'app-country-list',\r\n  templateUrl: './country-list.component.html',\r\n  styleUrls: ['./country-list.component.scss'],\r\n})\r\nexport class CountryListComponent implements OnInit {\r\n  countryList: Country[] = null;\r\n  filterMetadata = { count: 0 };\r\n  filterForm: FormGroup;\r\n  startCount: number = 0;\r\n  endCount: number = 30;\r\n  endDisplayCount: number = 30;\r\n  totalDisplayCount: number = 0;\r\n  subscription1: Subscription;\r\n  subscription2: Subscription;\r\n  subscription3: Subscription;\r\n  editMode: boolean = false;\r\n  sortByList = [\r\n    'Country',\r\n    'Cases',\r\n    'Deaths',\r\n    'Recovered',\r\n    'Tests',\r\n    'Population',\r\n  ];\r\n\r\n  constructor(\r\n    private store: Store<fromApp.AppState>,\r\n    private detectChangeRef: ChangeDetectorRef,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  @ViewChild('tileContainer') tileContainer: ElementRef;\r\n\r\n  ngOnInit(): void {\r\n    this.filterForm = new FormGroup({\r\n      sortBy: new FormControl('Country'),\r\n      searchText: new FormControl(''),\r\n    });\r\n\r\n    this.subscription1 = this.store.select(selectCountryList).subscribe(\r\n      (data) => {\r\n        this.countryList = data;\r\n        if (this.countryList == null) {\r\n          this.store.dispatch(DashboardActions.LoadCountryDashboard());\r\n        } else {\r\n          this.filterMetadata.count = this.countryList.length;\r\n        }\r\n      },\r\n      (error) => {\r\n        alert('Unable to fetch data. Please try again after sometime');\r\n      }\r\n    );\r\n    this.subscription2 = this.filterForm\r\n      .get('searchText')\r\n      .valueChanges.subscribe((value) => {\r\n        this.startCount = 0;\r\n        this.endCount = 30;\r\n        this.endDisplayCount = 30;\r\n      });\r\n\r\n    this.subscription3 = this.filterForm\r\n      .get('sortBy')\r\n      .valueChanges.subscribe((item) => {\r\n        this.onFilterChanged(item);\r\n      });\r\n  }\r\n\r\n  nextClicked() {\r\n    if (this.endCount < this.filterMetadata.count) {\r\n      this.startCount += 30;\r\n      this.endCount += 30;\r\n      this.endDisplayCount = this.endCount;\r\n      if (this.endCount > this.filterMetadata.count) {\r\n        this.endDisplayCount = this.filterMetadata.count;\r\n      }\r\n      this.tileContainer.nativeElement.scrollTop = 0;\r\n    }\r\n  }\r\n\r\n  previousClicked() {\r\n    if (this.startCount > 0) {\r\n      this.startCount -= 30;\r\n      this.endCount -= 30;\r\n      this.endDisplayCount = this.endCount;\r\n      this.tileContainer.nativeElement.scrollTop = 0;\r\n    }\r\n  }\r\n  onFilterChanged(item: string) {\r\n    item = item.toLowerCase();\r\n    this.countryList = [...this.countryList].sort((a, b) =>\r\n      a[item] > b[item] ? 1 : a[item] < b[item] ? -1 : 0\r\n    );\r\n  }\r\n\r\n  ngAfterContentChecked() {\r\n    this.detectChangeRef.detectChanges();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription1.unsubscribe();\r\n    this.subscription2.unsubscribe();\r\n    this.subscription3.unsubscribe();\r\n  }\r\n  onCountryEdit(countryId) {\r\n    this.router.navigate(['edit-country', countryId], {\r\n      relativeTo: this.route.parent,\r\n    });\r\n  }\r\n}\r\n","<div class=\"country_dashboard_container dashboard_content\">\r\n  <header class=\"header_section\"\r\n          [formGroup]=\"filterForm\">\r\n    <h3 class=\"sub_header\">Country</h3>\r\n    <div class=\"text_box_section\">\r\n      <div class=\"inputContainer\">\r\n        <i class=\"fa fa fa-search\"\r\n           aria-hidden=\"true\"></i>\r\n        <input type=\"text\"\r\n               formControlName=\"searchText\"\r\n               class=\"box_input search_input\"\r\n               placeholder=\"Search Country\">\r\n      </div>\r\n      <div class=\"inputContainer\">\r\n        <select name=\"\"\r\n                formControlName=\"sortBy\"\r\n                class=\"box_input sort_select\">\r\n          <option *ngFor=\"let opt of sortByList\"\r\n                  [ngValue]=\"opt\">{{opt}}</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n    <div class=\"pagination_section\">\r\n      <span class=\"page_count_span\">{{startCount}} to {{filterMetadata.count>30 ? endDisplayCount:\r\n        filterMetadata.count}} of {{filterMetadata.count}}</span>\r\n      <div class=\"navigation_section\">\r\n        <span (click)=\"previousClicked()\">\r\n          <i [ngClass]=\"{'disabled_arrow': startCount==0}\"\r\n             class=\"fa fa-chevron-circle-left\"></i>\r\n        </span>\r\n        <span (click)=\"nextClicked()\">\r\n          <i class=\"fa fa-chevron-circle-right\"\r\n             [ngClass]=\"{'disabled_arrow': filterMetadata.count<30 || endDisplayCount==filterMetadata.count}\"></i>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </header>\r\n  <section class=\"country_data_section\"\r\n           #tileContainer>\r\n    <div class=\"spinner align-center\"\r\n         *ngIf=\"countryList==null\">\r\n      <i class=\"fa fa-spinner fa-pulse fa-3x fa-fw\"></i>\r\n      <span class=\"sr-only\">Loading...</span>\r\n    </div>\r\n    <div class=\"tile_container\"\r\n         *ngIf=\"countryList!==null\">\r\n      <div class=\"card_content\"\r\n           *ngFor=\"let item of countryList | search:filterForm.get('searchText').value:filterMetadata | slice:startCount:endCount ; let i=index\">\r\n        <div class=\"tile count_tile\">\r\n          <div class=\"flex_item\">\r\n            <figure class=\"country_flag_container\">\r\n              <img class=\"flag_image\"\r\n                   [src]=\"item.flagImage\">\r\n            </figure>\r\n            <h4>{{item.country}}</h4>\r\n          </div>\r\n          <div class=\"flex_item country_count_row\">\r\n            <div class=\"country_count_item\">\r\n              <h5>Cases</h5>\r\n              <span>{{item.cases | number}}</span>\r\n            </div>\r\n            <div class=\"country_count_item\">\r\n              <h5>Deaths</h5>\r\n              <span>{{item.deaths | number}}</span>\r\n            </div>\r\n            <div class=\"country_count_item\">\r\n              <h5>Recovered</h5>\r\n              <span>{{item.recovered | number}}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"flex_item country_count_row\">\r\n            <div class=\"country_count_item\">\r\n              <h5>Tests</h5>\r\n              <span>{{item.tests | number}}</span>\r\n            </div>\r\n            <div class=\"country_count_item\">\r\n              <h5>Population</h5>\r\n              <span>{{item.population | number}}</span>\r\n            </div>\r\n            <a (click)=\"onCountryEdit(item.id)\"\r\n               class=\"edit_icon\">\r\n              <i class=\"fa fa-edit\"></i>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </section>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-country-dashboard',\r\n  templateUrl: './country-dashboard.component.html',\r\n  styleUrls: ['./country-dashboard.component.scss'],\r\n})\r\nexport class CountryDashboardComponent implements OnInit {\r\n  editMode: boolean = false;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport * as fromApp from '../app.reducer';\r\nimport * as AuthActions from '../login/store/auth.action';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  constructor(private store: Store<fromApp.AppState>) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onLogout() {\r\n    this.store.dispatch(AuthActions.Logout());\r\n  }\r\n}\r\n","<div class=\"dashboard_container\">\r\n  <nav class=\"left_nav_bar\">\r\n    <a class=\"nav_item \"\r\n       routerLink=\"/dashboard/total-dashboard\"\r\n       routerLinkActive=\"active\">\r\n      <i class=\"fa fa-dashboard fa-2x\"\r\n         aria-hidden=\"true\"></i>\r\n    </a>\r\n    <a class=\"nav_item\"\r\n       routerLink=\"/dashboard/country-dashboard\"\r\n       routerLinkActive=\"active\">\r\n      <i class=\"fa fa-flag fa-2x\"\r\n         aria-hidden=\"true\"></i>\r\n    </a>\r\n    <a class=\"nav_item logout_icon\"\r\n       (click)=\"onLogout()\">\r\n      <i class=\"fa fa-power-off fa-2x\"\r\n         aria-hidden=\"true\"></i>\r\n    </a>\r\n  </nav>\r\n  <section class=\"right_section\">\r\n    <router-outlet></router-outlet>\r\n  </section>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { TotalDashboardComponent } from './total-dashboard/total-dashboard.component';\r\nimport { CountryDashboardComponent } from './country-dashboard/country-dashboard.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { AuthGuardService } from '../shared/auth-guard.service';\r\nimport { EditCountryComponent } from './country-dashboard/edit-country/edit-country.component';\r\nimport { CountryListComponent } from './country-dashboard/country-list/country-list.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DashboardComponent,\r\n    TotalDashboardComponent,\r\n    CountryDashboardComponent,\r\n    EditCountryComponent,\r\n    CountryListComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        component: DashboardComponent,\r\n        canActivate: [AuthGuardService],\r\n        children: [\r\n          { path: '', redirectTo: 'total-dashboard', pathMatch: 'full' },\r\n          { path: 'total-dashboard', component: TotalDashboardComponent },\r\n          {\r\n            path: 'country-dashboard',\r\n            component: CountryDashboardComponent,\r\n            children: [\r\n              { path: '', redirectTo: 'country-list' },\r\n              { path: 'country-list', component: CountryListComponent },\r\n              {\r\n                path: 'edit-country/:id',\r\n                component: EditCountryComponent,\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    ]),\r\n  ],\r\n})\r\nexport class DashboardModule {}\r\n","import { createSelector } from '@ngrx/store';\r\nimport * as AppSelector from '../../app.selector';\r\nimport * as fromApp from '../../app.reducer';\r\nimport { Country } from '../country.model';\r\n\r\nexport const selectTotalList = createSelector(\r\n  AppSelector.selectAppState,\r\n  (state: fromApp.AppState) => state.dashboard.totalData\r\n);\r\nexport const selectCountryList = createSelector(\r\n  AppSelector.selectAppState,\r\n  (state: fromApp.AppState) => state.dashboard.countryData\r\n);\r\nexport const selectCountryById = (id: number) =>\r\n  createSelector(selectCountryList, (state: Country[]) => {\r\n    let c = state.find((item) => item.id === id);\r\n    return c;\r\n  });\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n} from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\nimport * as fromApp from '../app.reducer';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuardService implements CanActivate {\r\n  constructor(private store: Store<fromApp.AppState>, private router: Router) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | boolean\r\n    | UrlTree\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree> {\r\n    return this.store.select('auth').pipe(\r\n      take(1),\r\n      map((authData) => {\r\n        if (authData.user) {\r\n          return true;\r\n        } else {\r\n          this.router.navigate(['login']);\r\n          return false;\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}