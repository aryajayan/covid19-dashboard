{"version":3,"sources":["./src/app/shared/user.model.ts","./src/environments/environment.ts","./src/app/dashboard/store/dashboard.effect.ts","./src/app/shared/shared.module.ts","./src/app/dashboard/store/dashboard.reducer.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/login/login.module.ts","./src/app/app.module.ts","./src/app/shared/search.pipe.ts","./src/app/app.reducer.ts","./src/app/login/store/auth.action.ts","./src/app/login/store/auth.reducer.ts","./src/app/login/store/auth.effect.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/dashboard/store/dashboard.action.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export class User {\r\n  constructor(public username: string, private _token: string) {}\r\n\r\n  get token() {\r\n    return this._token;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport * as DashboardActions from './dashboard.action';\r\nimport {\r\n  catchError,\r\n  exhaustMap,\r\n  map,\r\n  mergeMap,\r\n  switchMap,\r\n  tap,\r\n} from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { Country } from '../country.model';\r\n\r\n@Injectable()\r\nexport class DashboardEffect {\r\n  loadDashboard$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(DashboardActions.LoadDashboard),\r\n      switchMap(() => {\r\n        return this.http.get('https://corona.lmao.ninja/v2/all').pipe(\r\n          map((result) => {\r\n            return DashboardActions.FetchTotal({\r\n              totaldata: {\r\n                cases: result['cases'],\r\n                todayCases: result['todayCases'],\r\n                deaths: result['deaths'],\r\n                todayDeaths: result['todayDeaths'],\r\n                recovered: result['recovered'],\r\n                todayRecovered: result['todayRecovered'],\r\n              },\r\n            });\r\n          }),\r\n          catchError((error) => {\r\n            return throwError(error);\r\n          })\r\n        );\r\n      })\r\n    )\r\n  );\r\n  loadCountryDashboard$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(DashboardActions.LoadCountryDashboard),\r\n      switchMap(() => {\r\n        return this.http.get('https://corona.lmao.ninja/v2/countries').pipe(\r\n          map((result) => {\r\n            let countries = Object.values(result).map((item: Country) => {\r\n              return {\r\n                country: item['country'],\r\n                id: item['countryInfo']['_id'],\r\n                cases: item['cases'],\r\n                deaths: item['deaths'],\r\n                recovered: item['recovered'],\r\n                tests: item['tests'],\r\n                population: item['population'],\r\n                flagImage: item['countryInfo']['flag'],\r\n              };\r\n            });\r\n            return DashboardActions.FetchCountryList({\r\n              countryData: countries,\r\n            });\r\n          }),\r\n          catchError((error) => {\r\n            return throwError(error);\r\n          })\r\n        );\r\n      })\r\n    )\r\n  );\r\n  constructor(\r\n    private actions$: Actions,\r\n    private router: Router,\r\n    private http: HttpClient\r\n  ) {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SearchPipe } from './search.pipe';\r\n\r\n@NgModule({\r\n  declarations: [SearchPipe],\r\n  imports: [CommonModule],\r\n  exports: [SearchPipe],\r\n})\r\nexport class SharedModule {}\r\n","import { createReducer, on } from '@ngrx/store';\r\nimport { Country } from '../country.model';\r\nimport { TotalCaseData } from '../total-cases.model';\r\nimport * as DashboardActions from './dashboard.action';\r\n\r\nexport interface State {\r\n  totalData: TotalCaseData;\r\n  countryData: Country[];\r\n}\r\n\r\nconst initialState: State = {\r\n  totalData: null,\r\n  countryData: null,\r\n};\r\nexport const dashboardReducer = createReducer(\r\n  initialState,\r\n  on(DashboardActions.FetchTotal, (state, action) => ({\r\n    ...state,\r\n    totalData: action.totaldata,\r\n  })),\r\n  on(DashboardActions.FetchCountryList, (state, action) => ({\r\n    ...state,\r\n    countryData: action.countryData,\r\n  })),\r\n  on(DashboardActions.SaveEdittedDetails, (state, action) => {\r\n    let index = state.countryData.findIndex((a) => a.id === action.country.id);\r\n    return {\r\n      ...state,\r\n      countryData: [\r\n        ...state.countryData.slice(0, index),\r\n        action.country,\r\n        ...state.countryData.slice(index + 1),\r\n      ],\r\n    };\r\n  }),\r\n  on(DashboardActions.LogoutDashboard, (state, action) => ({\r\n    ...state,\r\n    totalData: null,\r\n    countryData: null,\r\n  }))\r\n);\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent {\r\n  title = 'covid19-dashboard';\r\n}\r\n","<div class=\"wrapper\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild([{ path: 'login', component: LoginComponent }]),\r\n  ],\r\n})\r\nexport class LoginModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport * as fromApp from './app.reducer';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { AuthEffect } from './login/store/auth.effect';\r\nimport { LoginModule } from './login/login.module';\r\nimport { DashboardEffect } from './dashboard/store/dashboard.effect';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\nimport { environment } from '../environments/environment';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    StoreModule.forRoot(fromApp.appReducer),\r\n    EffectsModule.forRoot([AuthEffect, DashboardEffect]),\r\n    LoginModule,\r\n    SharedModule,\r\n    StoreDevtoolsModule.instrument({\r\n      maxAge: 25, // Retains last 25 states\r\n      logOnly: environment.production,\r\n    }),\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Country } from '../dashboard/country.model';\r\n\r\n@Pipe({\r\n  name: 'search',\r\n})\r\nexport class SearchPipe implements PipeTransform {\r\n  transform(\r\n    items: Country[],\r\n    searchText: string,\r\n    filterMetadata: any\r\n  ): Country[] {\r\n    filterMetadata.count = items.length;\r\n    if (!items) {\r\n      return [];\r\n    }\r\n    if (!searchText) {\r\n      return items;\r\n    }\r\n\r\n    let filtered = items.filter((a) =>\r\n      a.country.toLowerCase().includes(searchText.toLowerCase())\r\n    );\r\n    filterMetadata.count = filtered.length;\r\n    return filtered;\r\n  }\r\n}\r\n","import { ActionReducerMap } from '@ngrx/store';\r\nimport * as fromAuth from './login/store/auth.reducer';\r\nimport * as fromDashboard from './dashboard/store/dashboard.reducer';\r\n\r\nexport interface AppState {\r\n  auth: fromAuth.State;\r\n  dashboard: fromDashboard.State;\r\n}\r\nexport const appReducer: ActionReducerMap<AppState> = {\r\n  auth: fromAuth.authReducer,\r\n  dashboard: fromDashboard.dashboardReducer,\r\n};\r\n","import { createAction, props } from '@ngrx/store';\r\n\r\nexport const LOGIN_START = '[Auth] Login Start';\r\nexport const AUTHENTICATE_SUCCESS = '[Auth] Authenticate Success';\r\nexport const AUTHENTICATE_FAIL = '[Auth] Authenticate Fail';\r\nexport const LOGOUT = '[Auth] Logout';\r\n\r\nexport const LoginStart = createAction(\r\n  LOGIN_START,\r\n  props<{\r\n    username: string;\r\n    password: string;\r\n  }>()\r\n);\r\n\r\nexport const AuthenticateSuccess = createAction(\r\n  AUTHENTICATE_SUCCESS,\r\n  props<{\r\n    username: string;\r\n    token: string;\r\n  }>()\r\n);\r\n\r\nexport const AuthenticateFail = createAction(\r\n  AUTHENTICATE_FAIL,\r\n  props<{ error: string }>()\r\n);\r\n\r\nexport const Logout = createAction(LOGOUT);\r\n","import { createReducer, on } from '@ngrx/store';\r\nimport { User } from 'src/app/shared/user.model';\r\nimport * as AuthActions from './auth.action';\r\n\r\nexport interface State {\r\n  user: User;\r\n  authError: string;\r\n}\r\n\r\nconst initialState: State = {\r\n  user: null,\r\n  authError: null,\r\n};\r\nexport const authReducer = createReducer(\r\n  initialState,\r\n  on(AuthActions.LoginStart, (state, action) => ({\r\n    ...state,\r\n    user: null,\r\n    authError: null,\r\n  })),\r\n  on(AuthActions.AuthenticateSuccess, (state, action) => ({\r\n    ...state,\r\n    user: new User(action.username, action.token),\r\n  })),\r\n  on(AuthActions.AuthenticateFail, (state, action) => ({\r\n    ...state,\r\n    user: null,\r\n    authError: action.error,\r\n  })),\r\n  on(AuthActions.Logout, (state, action) => ({\r\n    ...state,\r\n    user: null,\r\n  }))\r\n);\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport * as AuthActions from './auth.action';\r\nimport { map, switchMap, tap } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport * as DashboardActions from '../../dashboard/store/dashboard.action';\r\nimport * as fromApp from '../../app.reducer';\r\nimport { Store } from '@ngrx/store';\r\n\r\n@Injectable()\r\nexport class AuthEffect {\r\n  loginStart$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(AuthActions.LoginStart),\r\n      map((authData) => {\r\n        if (authData.username == 'admin' && authData.password == 'admin') {\r\n          return AuthActions.AuthenticateSuccess({\r\n            username: authData.username,\r\n            token: 'a@1dmin123',\r\n          });\r\n        } else {\r\n          return AuthActions.AuthenticateFail({\r\n            error: 'Incorrect username or password',\r\n          });\r\n        }\r\n      })\r\n    )\r\n  );\r\n\r\n  authenticateSuccess$ = createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(AuthActions.AuthenticateSuccess),\r\n        tap(() => {\r\n          this.router.navigate(['/dashboard']);\r\n        })\r\n      ),\r\n    { dispatch: false }\r\n  );\r\n\r\n  logout$ = createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(AuthActions.Logout),\r\n        tap(() => {\r\n          this.router.navigate(['login']);\r\n          this.store.dispatch(DashboardActions.LogoutDashboard());\r\n        })\r\n      ),\r\n    { dispatch: false }\r\n  );\r\n  constructor(\r\n    private actions$: Actions,\r\n    private router: Router,\r\n    private store: Store<fromApp.AppState>\r\n  ) {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\r\n  {\r\n    path: 'dashboard',\r\n    loadChildren: () =>\r\n      import('./dashboard/dashboard.module').then((m) => m.DashboardModule),\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: '/login',\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Store } from '@ngrx/store';\r\nimport { Subscription } from 'rxjs';\r\nimport * as fromApp from '../app.reducer';\r\nimport * as AuthActions from '../login/store/auth.action';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  loginForm: FormGroup;\r\n  errorMessage: string = '';\r\n  subscription: Subscription;\r\n  constructor(private store: Store<fromApp.AppState>) {}\r\n\r\n  ngOnInit(): void {\r\n    this.subscription = this.store.select('auth').subscribe((authState) => {\r\n      this.errorMessage = authState.authError;\r\n    });\r\n    this.loginForm = new FormGroup({\r\n      username: new FormControl(null, [Validators.required]),\r\n      password: new FormControl(null, [Validators.required]),\r\n    });\r\n  }\r\n\r\n  // login click function\r\n  onLogin() {\r\n    let username = this.loginForm.get('username').value;\r\n    let password = this.loginForm.get('password').value;\r\n    this.store.dispatch(\r\n      AuthActions.LoginStart({ username: username, password: password })\r\n    );\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","<section class=\"login_container\">\r\n  <!-- left banner section -->\r\n  <div class=\"banner_section contents\">\r\n    <div class=\"quarter-circle-top-left\"></div>\r\n    <h1>COVID - 19</h1>\r\n  </div>\r\n  <!-- login form -->\r\n  <div class=\"form_section contents\">\r\n    <form [formGroup]=\"loginForm\"\r\n          role=\"form\"\r\n          (ngSubmit)=\"onLogin()\"\r\n          class=\"login_form\">\r\n      <div class=\"login_section\">\r\n        <input formControlName=\"username\"\r\n               type=\"text\"\r\n               class=\"input_text\"\r\n               placeholder=\"username\">\r\n        <input formControlName=\"password\"\r\n               type=\"password\"\r\n               class=\"input_text\"\r\n               placeholder=\"password\">\r\n        <span *ngIf=\"errorMessage\"\r\n              class=\"error_text\">{{errorMessage}}\r\n        </span>\r\n        <button class=\"button_blue\"\r\n                [disabled]=\"!loginForm.valid\">Login\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</section>\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { Country } from '../country.model';\r\nimport { TotalCaseData } from '../total-cases.model';\r\n\r\nexport const FETCH_TOTAL = '[Dashboard] Fetch Total';\r\nexport const LOAD_DASHBOARD = '[Dashboard] Load ';\r\nexport const LOAD_COUNTRY_DASHBOARD = '[Dashboard] Load Country Dashboard';\r\nexport const FETCH_COUNTRY_LIST = '[Dashboard] Fetch Country List';\r\nexport const SAVE_EDITTED_DETAILS = '[Dashboard] Save Editted Details';\r\nexport const LOGOUT_DASHBOARD = '[Dashboard] Logout Dashboard';\r\n\r\nexport const LoadDashboard = createAction(LOAD_DASHBOARD);\r\nexport const FetchTotal = createAction(\r\n  FETCH_TOTAL,\r\n  props<{\r\n    totaldata: TotalCaseData;\r\n  }>()\r\n);\r\nexport const LoadCountryDashboard = createAction(LOAD_COUNTRY_DASHBOARD);\r\nexport const FetchCountryList = createAction(\r\n  FETCH_COUNTRY_LIST,\r\n  props<{\r\n    countryData: Country[];\r\n  }>()\r\n);\r\nexport const SaveEdittedDetails = createAction(\r\n  SAVE_EDITTED_DETAILS,\r\n  props<{\r\n    country: Country;\r\n  }>()\r\n);\r\nexport const LogoutDashboard = createAction(LOGOUT_DASHBOARD);\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}